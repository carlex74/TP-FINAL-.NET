@page "/login"
@layout EmptyLayout
@inject IAPIAuthClients AuthApiClient
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider
@inject FrontWeb.Auth.LocalStorageService LocalStorage

<div class="row justify-content-center mt-5">
    <div class="col-md-6 col-lg-4">
        <div class="card shadow-sm">
            <div class="card-header">
                <h3 class="text-center">Iniciar Sesión</h3>
            </div>
            <div class="card-body">
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger">@errorMessage</div>
                }
                <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator />
                    <div class="mb-3">
                        <label for="legajo" class="form-label">Legajo</label>
                        <InputText id="legajo" class="form-control" @bind-Value="loginModel.Legajo" />
                        <ValidationMessage For="@(() => loginModel.Legajo)" />
                    </div>
                    <div class="mb-3">
                        <label for="clave" class="form-label">Contraseña</label>
                        <InputText id="clave" type="password" class="form-control" @bind-Value="loginModel.Clave" />
                        <ValidationMessage For="@(() => loginModel.Clave)" />
                    </div>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
                            @if (isSubmitting)
                            {
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                <span> Ingresando...</span>
                            }
                            else
                            {
                                <span>Ingresar</span>
                            }
                        </button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private ApplicationClean.DTOs.LoginRequestDTO loginModel = new();
    private string errorMessage;
    private bool isSubmitting = false;

    private async Task HandleLogin()
    {
        isSubmitting = true;
        errorMessage = string.Empty;

        try
        {
            var loginResponse = await AuthApiClient.LoginAsync(loginModel.Legajo, loginModel.Clave);

            if (loginResponse != null && !string.IsNullOrEmpty(loginResponse.Token))
            {
                await LocalStorage.SetItem("authToken", loginResponse.Token);

                var usuario = loginResponse.Usuario;

                if (usuario.Tipo == Domain.Entities.Usuario.TipoUsuario.Alumno)
                    NavigationManager.NavigateTo("/portal-alumno", forceLoad: true);
                else if (usuario.Tipo == Domain.Entities.Usuario.TipoUsuario.Docente)
                    NavigationManager.NavigateTo("/portal-docente", forceLoad: true);
                else
                    NavigationManager.NavigateTo("/", forceLoad: true);
            }
            else
            {
                errorMessage = "Legajo o contraseña incorrectos.";
            }
        }
        catch (Exception)
        {
            errorMessage = "Error de conexión. No se pudo contactar al servidor.";
        }
        finally
        {
            isSubmitting = false;
        }
    }
}