@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject FrontWeb.Auth.LocalStorageService LocalStorage

@* Esta variable de C# controlará el layout *@
<div class="page @(_isAdmin ? "admin-layout" : "user-layout")">

    @* Esto renderiza la sidebar SÓLO si _isAdmin es true *@
    @if (_isAdmin)
    {
        <div class="sidebar">
            <nav class="flex-column">
                <AuthorizeView Roles="Administrador">
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="reportes/historial">
                            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Historial Académico
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="reportes/rendimiento">
                            <span class="bi bi-bar-chart-fill-nav-menu" aria-hidden="true"></span> Rendimiento Cursos
                        </NavLink>
                    </div>
                </AuthorizeView>
            </nav>
        </div>
    }

    <main>
        <div class="top-row px-4">
            <h5 class="mb-0">Academia Web</h5>

            <AuthorizeView>
                <Authorized>
                    <div class="d-flex align-items-center ms-auto">
                        <span class="me-3">
                            <span class="bi bi-person-circle me-1"></span>
                            Hola, <strong>@context.User.Claims.FirstOrDefault(c => c.Type == "nombreCompleto")?.Value</strong>
                        </span>
                        <button class="btn btn-outline-secondary btn-sm" @onclick="Logout">
                            <span class="bi bi-box-arrow-right me-1"></span>Cerrar Sesión
                        </button>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <a href="login" class="ms-auto">Iniciar Sesión</a>
                </NotAuthorized>
            </AuthorizeView>
        </div>

        <article class="content px-4 pb-5">
            @Body
        </article>
    </main>
</div>

@code {
    private bool _isAdmin = false;
    private System.Security.Claims.ClaimsPrincipal _user = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        _user = authState.User;
        if (_user.Identity != null && _user.Identity.IsAuthenticated)
        {
            _isAdmin = _user.IsInRole("Administrador");
        }
    }

    private async Task Logout()
    {
        await LocalStorage.RemoveItem("authToken");
        NavigationManager.NavigateTo("/login", forceLoad: true);
    }
}